name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: rover:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Pre-commit
        uses: pre-commit/action@v3.0.0

      - name: Run Tests
        run: |
          docker run --rm rover:test shellspec

  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure GitHub Token
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          version: v1.28.13
          soft_fail: false

      - name: Run terrascan
        uses: tenable/terrascan-action@v1.4.0
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'azure'
          only_warn: false

      - name: Run checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          soft_fail: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.55.0

      - name: Run TFLint
        run: tflint --recursive
