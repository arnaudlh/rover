name: PR Build & Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches:
      - '**'
      - '!main'  # Exclude main branch to avoid duplicate runs on PRs

permissions:
  contents: write
  packages: write
  checks: write  # Required for creating check runs
  pull-requests: write  # Required for commenting on PRs
  actions: write  # Required for cache operations

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug Info
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          echo "Docker version:"
          docker version
          echo "Docker info:"
          docker info
          echo "GitHub Actor: ${{ github.actor }}"
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub SHA: ${{ github.sha }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker buildx build \
            --target base \
            --build-arg TARGETARCH=amd64 \
            --build-arg TARGETOS=linux \
            --build-arg USER_UID=1000 \
            --build-arg USER_GID=1000 \
            --build-arg USERNAME=vscode \
            --build-arg versionVault=1.15.0 \
            --build-arg versionGolang=1.21.6 \
            --build-arg versionKubectl=1.28.4 \
            --build-arg versionKubelogin=0.1.0 \
            --build-arg versionDockerCompose=2.24.1 \
            --build-arg versionTerraformDocs=0.17.0 \
            --build-arg versionPacker=1.10.0 \
            --build-arg versionPowershell=7.4.1 \
            --build-arg versionAnsible=2.16.2 \
            --build-arg extensionsAzureCli=aks-preview \
            --build-arg versionTerrascan=1.18.3 \
            --build-arg versionTfupdate=0.7.2 \
            --platform linux/amd64 \
            --push \
            -t ghcr.io/${{ github.repository }}/rover:pr-${{ github.sha }} .
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}/rover:pr-${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Report build status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            
            let body = `Build Status: ${status}

Build Information:
- Platforms: linux/amd64, linux/arm64
- SHA: ${context.sha}
- Security: Trivy scan results uploaded to Security tab

Status Details:
- Build: ${status}
- Security Scan: ${process.env.TRIVY_EXIT_CODE === '0' ? '✅' : '❌'}`;
            
            if (context.payload.pull_request) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body
              });
            }
            
            // Set status check
            const conclusion = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            await github.rest.checks.create({
              owner,
              repo,
              name: 'Build & Security Check',
              head_sha: context.sha,
              status: 'completed',
              conclusion,
              output: {
                title: `Build ${status}`,
                summary: body
              }
            });
