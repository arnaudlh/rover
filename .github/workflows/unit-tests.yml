name: Unit Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  shellspec:
    name: ShellSpec Tests
    runs-on: ubuntu-latest
    env:
      log_folder_path: /tmp/test_logs
      script_path: ${{ github.workspace }}/scripts
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq uuid-runtime kcov
        curl -fsSL https://git.io/shellspec | sh -s -- --yes
        echo "${HOME}/.local/bin" >> $GITHUB_PATH

    - name: Setup Test Environment
      run: |
        mkdir -p "${log_folder_path}"
        mkdir -p scripts/tfcloud
        touch scripts/tfcloud/mock.sh

    - name: Run Unit Tests
      id: unit_tests
      run: |
        shellspec --format documentation --no-banner spec/unit/logger/logger_spec.sh
      continue-on-error: true

    - name: Generate Coverage Report
      id: coverage
      run: |
        shellspec --coverage --kcov-options "--include-path=scripts/lib" spec/unit/logger/logger_spec.sh
      continue-on-error: true

    - name: Process Test Results
      run: |
        echo "### Test Results :test_tube:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.unit_tests.outcome }}" == "success" ]; then
          echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        echo "### Coverage Report :chart_with_upwards_trend:" >> $GITHUB_STEP_SUMMARY
        if [ -f "coverage/index.html" ]; then
          COVERAGE=$(grep -oP 'Total:\s+\K[0-9]+%' coverage/index.html || echo "N/A")
          echo "Code Coverage: $COVERAGE" >> $GITHUB_STEP_SUMMARY
        else
          echo "Coverage report not generated" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          .shellspec-report/
          coverage/
          /tmp/test_logs/
