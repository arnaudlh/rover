name: Roverlight-Build-Release

on:
  workflow_dispatch:
  release:
    types: [created]
  push:
    branches: 
      - 'roverlight'
      - 'devin/1738291242-modernize-github-actions'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.tag.outputs.date }}
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate tags
      id: tag
      run: |
        echo "date=$(date +'%g%m.%d%H%M')" >> $GITHUB_OUTPUT
        echo "tag=$(date +'%g%m.%d%H%M')" >> $GITHUB_ENV

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          
    - name: Building roverlight
      id: push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.roverlight
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: |
          versionRover=${{ steps.tag.outputs.date }}
        push: true
        load: false
        tags: |
          ghcr.io/${{ github.repository }}/rover/roverlight:latest
          ghcr.io/${{ github.repository }}/rover/roverlight:${{ steps.tag.outputs.date }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ matrix.platform }}
        provenance: false

  scan:
    needs: build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build.outputs.tag }}
    permissions:
      contents: read
      packages: read
      security-events: write
    steps:
      - name: Scan container
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ghcr.io/${{ github.repository }}/rover/roverlight:${{ env.TAG }}
          severity-cutoff: critical
          fail-build: false
          output-format: sarif

      - name: Upload scan SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
